------ Manual tests for the UART ------

Test of the API has been performed by sending/receiving characters with the existing functions:
uint8_t uart_init(const uart_settings_t *);
uint8_t uart_tx_ready(void);
uint8_t uart_rx_ready(void);
void uart_write_chr(uint8_t);
void uart_write_str(char *);
char uart_read_chr(void);

------ Input parameter tests for uart_init -------
These are manual/automated tests to check the uart communication for bad input
since our test framework (Unity) relies on the uart communication for output
we should not test the uart in our unit-test suite. 

uint8_t test_uart_init_with_correct_baudrate(void) {


	const uart_settings_t uart_settings = {
		.baudrate = 115200,
		.paritytype = UART_MR_PAR_NO
	};

	return uart_init(UART,&uart_settings);

}

uint8_t test_uart_init_with_incorrect_baudrate(void) {

	const uart_settings_t uart_settings = {
		.baudrate = 1,
		.paritytype = UART_MR_PAR_NO
	};

	uint8_t init = uart_init(UART,&uart_settings);

	if(init == 0)
		return 0;
	else
		return 1;
}

To run the tests Example:

	// Run manual test for UART communication
	uint8_t uart_init = 1;
	uart_init = test_uart_init_with_correct_baudrate();
	uart_init = test_uart_init_with_incorrect_baudrate();

	if(uart_init == 0){
		pio_conf_pin(PIO_PORTB,27,1,0);	// Turn LED on if success
	}else{
		pio_conf_pin(PIO_PORTB, 27,0,0); // Turn LED off if unsuccessful
	}

In this example we turn of a pin if uart fails.






