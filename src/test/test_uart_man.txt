--- Manual tests for the UART ---
Unity is using the UART API to print results. If that's working, then the
UART API working. At least these functions are tested:
	void uart_init(const uart_settings_t *);
	uint8_t uart_tx_ready(void);
	void uart_write_char(uint8_t);

--- Automatic tests for the UART ---
Since Unity is depending on the UART functions, the only possibility to make a
automatic unit test of the UART API is when not running the Unity framework.

UNIT TEST: Send and receive a character in Local Loopback mode -------
Test of the API has been performed by sending/receiving a character with the
existing functions:
	void uart_init(const uart_settings_t *);
	uint8_t uart_tx_ready(void);
	uint8_t uart_rx_ready(void);
	void uart_write_char(uint8_t);
	char uart_read_char(void);

If these two conditions are satisfied, then the internal LED is turned on:
	1) Send 'A', receive 'A'
	2) Send 'A', don't receive 'B'

Code:

	// for storing test result
	uint8_t result;
	// for storing received character
	char chr;
	// UART settings
	uart_settings_t uart_settings = {
		.baud_rate = 115200,
		.parity = UART_PARITY_NO,
		.ch_mode = UART_CHMODE_LOCAL_LOOPBACK
	};
	// enable Peripheral Clock for UART.
	pmc_enable_peripheral_clock(ID_UART);
	// remove the pins from under the control of PIO
	pio_disable_pin(PIOA, 8);	//RX0
	pio_disable_pin(PIOA, 9);	//TX0
	// initialize UART
	uart_init(&uart_settings);

	// perform test
	while (!(uart_tx_ready()));		// wait until character can be sent
	uart_write_char('A');			// send character
	while (!(uart_rx_ready()));		// wait until character can be read
	chr = uart_read_char();			// read character
	result = (chr == 'A');			// determine result
	while (!(uart_tx_ready()));		// wait until character can be sent
	uart_write_char('A');			// send character
	while (!(uart_rx_ready()));		// wait until character can be read
	chr = uart_read_char();			// read character
	result &= (chr != 'B');			// determine result (compare with last)

	// change channel mode
	uart_settings.ch_mode = UART_CHMODE_NORMAL;
	// reinitialize UART
	uart_init(&uart_settings);
	// print test result
	if (result) {
		uart_write_str("Test result: success!\n");
	} else {
		uart_write_str("Test result: failure!\n");
	}